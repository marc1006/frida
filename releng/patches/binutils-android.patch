diff -Nur binutils-2.23.2-old/libiberty/getpagesize.c binutils-2.23.2/libiberty/getpagesize.c
--- binutils-2.23.2-old/libiberty/getpagesize.c	2005-03-28 04:09:01.000000000 +0200
+++ binutils-2.23.2/libiberty/getpagesize.c	2013-10-24 22:45:24.000000000 +0200
@@ -20,6 +20,7 @@
 
 */
 
+#ifndef ANDROID
 #ifndef VMS
 
 #include "config.h"
@@ -88,3 +89,4 @@
 }
 
 #endif /* VMS */
+#endif /* ANDROID */
diff -Nur binutils-2.23.2-old/bfd/archive.c binutils-2.23.2/bfd/archive.c
--- binutils-2.23.2-old/bfd/archive.c	2013-03-25 09:06:19.000000000 +0100
+++ binutils-2.23.2/bfd/archive.c	2013-10-24 21:48:30.000000000 +0200
@@ -1863,7 +1863,9 @@
     {
       /* Assume we just "made" the member, and fake it.  */
       struct bfd_in_memory *bim = (struct bfd_in_memory *) member->iostream;
-      time (&status.st_mtime);
+      time_t t;
+      time (&t);
+      status.st_mtime = t;
       status.st_uid = getuid ();
       status.st_gid = getgid ();
       status.st_mode = 0644;
diff -Nur binutils-2.25-old/bfd/hosts/i386linux.h binutils-2.25/bfd/hosts/i386linux.h
--- binutils-2.25-old/bfd/hosts/i386linux.h	2015-02-22 14:56:13.000000000 +0100
+++ binutils-2.25/bfd/hosts/i386linux.h	2015-02-22 15:01:47.000000000 +0100
@@ -24,4 +24,15 @@
    our ability to process the core file).  So allow 0-4096 extra bytes at
    the end.  */
 
+#ifndef UPAGES
+# define UPAGES 1
+#endif
+
+#ifndef HOST_TEXT_START_ADDR
+# define HOST_TEXT_START_ADDR (u.start_code)
+#endif
+#ifndef HOST_STACK_END_ADDR
+# define HOST_STACK_END_ADDR (u.start_stack + u.u_ssize * NBPG)
+#endif
+
 #define TRAD_CORE_EXTRA_SIZE_ALLOWED 4096
diff -Nur binutils-2.25-old/bfd/hosts/x86-64linux.h binutils-2.25/bfd/hosts/i386linux.h
--- binutils-2.25-old/bfd/hosts/x86-64linux.h	2015-02-22 14:56:31.000000000 +0100
+++ binutils-2.25/bfd/hosts/x86-64linux.h	2015-02-22 15:02:04.000000000 +0100
@@ -39,6 +39,17 @@
 typedef unsigned long long int uint64_t;
 #endif
 
+#ifndef UPAGES
+# define UPAGES 1
+#endif
+
+#ifndef HOST_TEXT_START_ADDR
+# define HOST_TEXT_START_ADDR (u.start_code)
+#endif
+#ifndef HOST_STACK_END_ADDR
+# define HOST_STACK_END_ADDR (u.start_stack + u.u_ssize * NBPG)
+#endif
+
 /* Unsigned 64-bit integer aligned to 8 bytes.  */
 typedef uint64_t __attribute__ ((__aligned__ (8))) a8_uint64_t;
 
--- binutils/libiberty/d-demangle.c-orig	2015-08-16 21:12:49.000000000 +0200
+++ binutils/libiberty/d-demangle.c	2015-08-16 21:15:36.000000000 +0200
@@ -44,7 +44,6 @@
 #include <stdlib.h>
 #else
 extern long strtol (const char *nptr, char **endptr, int base);
-extern long double strtold (const char *nptr, char **endptr);
 #endif
 
 #include <demangle.h>
@@ -810,7 +809,7 @@
 {
   char buffer[64];
   int len = 0;
-  long double value;
+  double value;
   char *endptr;
 
   /* Handle NAN and +-INF.  */
@@ -877,12 +876,12 @@
 
   /* Convert buffer from hexadecimal to floating-point.  */
   buffer[len] = '\0';
-  value = strtold (buffer, &endptr);
+  value = strtod (buffer, &endptr);
 
   if (endptr == NULL || endptr != (buffer + len))
     return NULL;
 
-  len = snprintf (buffer, sizeof(buffer), "%#Lg", value);
+  len = snprintf (buffer, sizeof(buffer), "%#g", value);
   string_appendn (decl, buffer, len);
   return mangled;
 }
